[
    {
        "tvm_func_name": "BitConverter",
        "op_type": "BitConverter",
        "parameters": {
            "arg0_shape": [
                1024,
                1024
            ],
            "arg1_shape": [
                1
            ],
            "arg2_shape": [
                1
            ],
            "out_shape": [
                1024,
                1024
            ],
            "identifier_suffix": ""
        },
        "code": "extern \"C\" __global__ void FP32toInt8Shift(float* input0, float* input1, float* input2, float* output0){\n\n    const int BLOCK_SIZE = 32;\n    const int N=1024;\n\n    const float * A = input0;\n    uint8_t * B = reinterpret_cast<uint8_t*>(output0);\n    float scale = *input1;\n    int zp=(int)(*input2);\n\n    int bx = blockIdx.x;\n    int by = blockIdx.y;\n    int tx = threadIdx.x;\n    int ty = threadIdx.y;\n \n    int startrow = by * BLOCK_SIZE + ty;\n    int startcol = bx * BLOCK_SIZE + tx;\n    int idx = startrow * N + startcol;\n \n    int cast_val = (int(A[idx] * scale) >> zp)+zp;\n \n    B[idx] = (uint8_t)cast_val;\n}",
        "gridDim": [
            32,
            32,
            1
        ],
        "blockDim": [
            32,
            32,
            1
        ],
        "dynamic_shared_memory": 65536
    }
]