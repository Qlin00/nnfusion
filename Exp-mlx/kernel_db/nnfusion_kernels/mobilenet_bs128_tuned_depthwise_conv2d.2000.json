[{"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_128_56_56_w128_1_3_3_o128_128_56_56_ws1_1_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 128, 56, 56], "filter_shape": [128, 1, 3, 3], "output_shape": [128, 128, 56, 56], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_128_56_56_w128_1_3_3_o128_128_56_56_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[3364];\n  __shared__ float input1_shared[9];\n   float PaddedInput_shared_local[36];\n   float input1_shared_local[9];\n   float output0_local[14];\n  PaddedInput_shared[((((int)threadIdx.y) * 28) + ((int)threadIdx.x))] = ((((58 <= ((((int)threadIdx.y) * 28) + ((int)threadIdx.x))) && (1 <= (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) % 58))) && ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) / 58) * 56)) + (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 224)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 50) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 50) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 224) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 50) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 448)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 42) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 42) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 448) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 42) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 672)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 34) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 34) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 672) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 34) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 896)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 26) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 26) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 896) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 26) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1120)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 18) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 18) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1120) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 18) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1344)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 10) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 10) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1344) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 10) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1568)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1568) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1792)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 52) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 52) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 1792) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 52) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2016)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 44) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 44) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2016) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 44) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2240)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 36) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 36) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2240) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 36) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2464)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 28) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 28) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2464) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 28) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2688)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 20) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 20) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2688) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 20) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2912)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 12) % 58)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 12) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 2912) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 12) % 58)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 3136)] = ((((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) < 170) && (1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 4) % 58))) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 4) % 58) < 57)) ? input0[((((((int)blockIdx.z) * 3136) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 3136) / 58) * 56)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 4) % 58)) - 57)] : 0.000000e+00f);\n  if (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) < 4) {\n    if (((int)threadIdx.y) < 1) {\n      PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 3360)] = 0.000000e+00f;\n    }\n  }\n  if (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) < 9) {\n    if (((int)threadIdx.y) < 1) {\n      input1_shared[((((int)threadIdx.y) * 28) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.y) * 28) + ((((int)blockIdx.z) & 127) * 9)) + ((int)threadIdx.x))];\n    }\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2))];\n  PaddedInput_shared_local[1] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 1)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 2)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 3)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 58)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 59)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 60)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 61)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 116)];\n  PaddedInput_shared_local[9] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 117)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 118)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 119)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 174)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 175)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 176)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 177)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 232)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 233)];\n  PaddedInput_shared_local[18] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 234)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 235)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 290)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 291)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 292)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 293)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 348)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 349)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 350)];\n  PaddedInput_shared_local[27] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 351)];\n  PaddedInput_shared_local[28] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 406)];\n  PaddedInput_shared_local[29] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 407)];\n  PaddedInput_shared_local[30] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 408)];\n  PaddedInput_shared_local[31] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 409)];\n  PaddedInput_shared_local[32] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 464)];\n  PaddedInput_shared_local[33] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 465)];\n  PaddedInput_shared_local[34] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 466)];\n  PaddedInput_shared_local[35] = PaddedInput_shared[(((((int)threadIdx.y) * 406) + (((int)threadIdx.x) * 2)) + 467)];\n  input1_shared_local[0] = input1_shared[0];\n  input1_shared_local[1] = input1_shared[1];\n  input1_shared_local[2] = input1_shared[2];\n  input1_shared_local[3] = input1_shared[3];\n  input1_shared_local[4] = input1_shared[4];\n  input1_shared_local[5] = input1_shared[5];\n  input1_shared_local[6] = input1_shared[6];\n  input1_shared_local[7] = input1_shared[7];\n  input1_shared_local[8] = input1_shared[8];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[4] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[5] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[6] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[8] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[9] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[10] * input1_shared_local[8]));\n  output0_local[1] = 0.000000e+00f;\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[1] * input1_shared_local[0]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[2] * input1_shared_local[1]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[3] * input1_shared_local[2]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[5] * input1_shared_local[3]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[6] * input1_shared_local[4]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[7] * input1_shared_local[5]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[9] * input1_shared_local[6]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[10] * input1_shared_local[7]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[11] * input1_shared_local[8]));\n  output0_local[2] = 0.000000e+00f;\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[4] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[5] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[6] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[8] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[9] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[10] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[12] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[13] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[14] * input1_shared_local[8]));\n  output0_local[3] = 0.000000e+00f;\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[5] * input1_shared_local[0]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[6] * input1_shared_local[1]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[7] * input1_shared_local[2]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[9] * input1_shared_local[3]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[10] * input1_shared_local[4]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[11] * input1_shared_local[5]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[13] * input1_shared_local[6]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[14] * input1_shared_local[7]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[15] * input1_shared_local[8]));\n  output0_local[4] = 0.000000e+00f;\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[8] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[9] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[10] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[12] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[13] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[14] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[16] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[17] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[18] * input1_shared_local[8]));\n  output0_local[5] = 0.000000e+00f;\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[9] * input1_shared_local[0]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[10] * input1_shared_local[1]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[11] * input1_shared_local[2]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[13] * input1_shared_local[3]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[14] * input1_shared_local[4]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[15] * input1_shared_local[5]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[17] * input1_shared_local[6]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[18] * input1_shared_local[7]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[19] * input1_shared_local[8]));\n  output0_local[6] = 0.000000e+00f;\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[12] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[13] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[14] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[16] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[17] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[18] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[20] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[21] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[22] * input1_shared_local[8]));\n  output0_local[7] = 0.000000e+00f;\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[13] * input1_shared_local[0]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[14] * input1_shared_local[1]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[15] * input1_shared_local[2]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[17] * input1_shared_local[3]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[18] * input1_shared_local[4]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[19] * input1_shared_local[5]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[21] * input1_shared_local[6]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[22] * input1_shared_local[7]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[23] * input1_shared_local[8]));\n  output0_local[8] = 0.000000e+00f;\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[16] * input1_shared_local[0]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[17] * input1_shared_local[1]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[18] * input1_shared_local[2]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[20] * input1_shared_local[3]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[21] * input1_shared_local[4]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[22] * input1_shared_local[5]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[24] * input1_shared_local[6]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[25] * input1_shared_local[7]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[26] * input1_shared_local[8]));\n  output0_local[9] = 0.000000e+00f;\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[17] * input1_shared_local[0]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[18] * input1_shared_local[1]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[19] * input1_shared_local[2]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[21] * input1_shared_local[3]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[22] * input1_shared_local[4]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[23] * input1_shared_local[5]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[25] * input1_shared_local[6]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[26] * input1_shared_local[7]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[27] * input1_shared_local[8]));\n  output0_local[10] = 0.000000e+00f;\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[20] * input1_shared_local[0]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[21] * input1_shared_local[1]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[22] * input1_shared_local[2]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[24] * input1_shared_local[3]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[25] * input1_shared_local[4]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[26] * input1_shared_local[5]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[28] * input1_shared_local[6]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[29] * input1_shared_local[7]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[30] * input1_shared_local[8]));\n  output0_local[11] = 0.000000e+00f;\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[21] * input1_shared_local[0]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[22] * input1_shared_local[1]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[23] * input1_shared_local[2]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[25] * input1_shared_local[3]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[26] * input1_shared_local[4]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[27] * input1_shared_local[5]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[29] * input1_shared_local[6]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[30] * input1_shared_local[7]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[31] * input1_shared_local[8]));\n  output0_local[12] = 0.000000e+00f;\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[24] * input1_shared_local[0]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[25] * input1_shared_local[1]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[26] * input1_shared_local[2]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[28] * input1_shared_local[3]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[29] * input1_shared_local[4]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[30] * input1_shared_local[5]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[32] * input1_shared_local[6]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[33] * input1_shared_local[7]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[34] * input1_shared_local[8]));\n  output0_local[13] = 0.000000e+00f;\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[25] * input1_shared_local[0]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[26] * input1_shared_local[1]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[27] * input1_shared_local[2]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[29] * input1_shared_local[3]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[30] * input1_shared_local[4]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[31] * input1_shared_local[5]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[33] * input1_shared_local[6]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[34] * input1_shared_local[7]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[35] * input1_shared_local[8]));\n  output0[(((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2))] = output0_local[0];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 1)] = output0_local[1];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 56)] = output0_local[2];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 57)] = output0_local[3];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 112)] = output0_local[4];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 113)] = output0_local[5];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 168)] = output0_local[6];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 169)] = output0_local[7];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 224)] = output0_local[8];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 225)] = output0_local[9];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 280)] = output0_local[10];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 281)] = output0_local[11];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 336)] = output0_local[12];\n  output0[((((((int)blockIdx.z) * 3136) + (((int)threadIdx.y) * 392)) + (((int)threadIdx.x) * 2)) + 337)] = output0_local[13];\n}\n\n", "gridDim": [1, 1, 16384], "blockDim": [28, 8, 1]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_64_112_112_w64_1_3_3_o128_64_56_56_ws2_2_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 64, 112, 112], "filter_shape": [64, 1, 3, 3], "output_shape": [128, 64, 56, 56], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_64_112_112_w64_1_3_3_o128_64_56_56_ws2_2_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[855];\n  __shared__ float input1_shared[9];\n   float PaddedInput_shared_local[63];\n   float input1_shared_local[9];\n   float output0_local[7];\n  PaddedInput_shared[((int)threadIdx.x)] = (((1 <= ((int)blockIdx.y)) && (1 <= ((((int)blockIdx.x) * 56) + ((int)threadIdx.x)))) ? input0[(((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 28)] = ((1 <= ((int)blockIdx.y)) ? input0[(((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((int)blockIdx.x) * 56)) + ((int)threadIdx.x)) - 85)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 56)] = (((1 <= ((((int)blockIdx.y) * 14) + ((((int)threadIdx.x) + 56) / 57))) && (1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 56) % 57)))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 56) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 56) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 84)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 84) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 27)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 112)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 55) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 112) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 55) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 140)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 140) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 26)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 168)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 54) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 168) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 54) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 196)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 196) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 25)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 224)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 53) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 224) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 53) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 252)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 252) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 24)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 280)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 52) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 280) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 52) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 308)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 308) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 23)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 336)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 51) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 336) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 51) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 364)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 364) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 22)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 392)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 50) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 392) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 50) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 420)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 420) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 21)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 448)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 49) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 448) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 49) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 476)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 476) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 20)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 504)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 48) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 504) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 48) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 532)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 532) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 19)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 560)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 47) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 560) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 47) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 588)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 588) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 18)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 616)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 46) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 616) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 46) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 644)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 644) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 17)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 672)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 45) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 672) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 45) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 700)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 700) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 16)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 728)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 44) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 728) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 44) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 756)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 756) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 15)) - 113)];\n  PaddedInput_shared[(((int)threadIdx.x) + 784)] = ((1 <= ((((int)blockIdx.x) * 56) + ((((int)threadIdx.x) + 43) % 57))) ? input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 784) / 57) * 112)) + (((int)blockIdx.x) * 56)) + ((((int)threadIdx.x) + 43) % 57)) - 113)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 812)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 812) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 14)) - 113)];\n  if (((int)threadIdx.x) < 15) {\n    PaddedInput_shared[(((int)threadIdx.x) + 840)] = input0[((((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 1568)) + (((((int)threadIdx.x) + 840) / 57) * 112)) + (((int)blockIdx.x) * 56)) + (((int)threadIdx.x) + 42)) - 113)];\n  }\n  if (((int)threadIdx.x) < 9) {\n    input1_shared[((int)threadIdx.x)] = input1[(((((int)blockIdx.z) & 63) * 9) + ((int)threadIdx.x))];\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[(((int)threadIdx.x) * 2)];\n  PaddedInput_shared_local[9] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 114)];\n  PaddedInput_shared_local[18] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 228)];\n  PaddedInput_shared_local[27] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 342)];\n  PaddedInput_shared_local[36] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 456)];\n  PaddedInput_shared_local[45] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 570)];\n  PaddedInput_shared_local[54] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 684)];\n  PaddedInput_shared_local[1] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 1)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 115)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 229)];\n  PaddedInput_shared_local[28] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 343)];\n  PaddedInput_shared_local[37] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 457)];\n  PaddedInput_shared_local[46] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 571)];\n  PaddedInput_shared_local[55] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 685)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 2)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 116)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 230)];\n  PaddedInput_shared_local[29] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 344)];\n  PaddedInput_shared_local[38] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 458)];\n  PaddedInput_shared_local[47] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 572)];\n  PaddedInput_shared_local[56] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 686)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 57)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 171)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 285)];\n  PaddedInput_shared_local[30] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 399)];\n  PaddedInput_shared_local[39] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 513)];\n  PaddedInput_shared_local[48] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 627)];\n  PaddedInput_shared_local[57] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 741)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 58)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 172)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 286)];\n  PaddedInput_shared_local[31] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 400)];\n  PaddedInput_shared_local[40] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 514)];\n  PaddedInput_shared_local[49] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 628)];\n  PaddedInput_shared_local[58] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 742)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 59)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 173)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 287)];\n  PaddedInput_shared_local[32] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 401)];\n  PaddedInput_shared_local[41] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 515)];\n  PaddedInput_shared_local[50] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 629)];\n  PaddedInput_shared_local[59] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 743)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 114)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 228)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 342)];\n  PaddedInput_shared_local[33] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 456)];\n  PaddedInput_shared_local[42] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 570)];\n  PaddedInput_shared_local[51] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 684)];\n  PaddedInput_shared_local[60] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 798)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 115)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 229)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 343)];\n  PaddedInput_shared_local[34] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 457)];\n  PaddedInput_shared_local[43] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 571)];\n  PaddedInput_shared_local[52] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 685)];\n  PaddedInput_shared_local[61] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 799)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 116)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 230)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 344)];\n  PaddedInput_shared_local[35] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 458)];\n  PaddedInput_shared_local[44] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 572)];\n  PaddedInput_shared_local[53] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 686)];\n  PaddedInput_shared_local[62] = PaddedInput_shared[((((int)threadIdx.x) * 2) + 800)];\n  input1_shared_local[0] = input1_shared[0];\n  input1_shared_local[1] = input1_shared[1];\n  input1_shared_local[2] = input1_shared[2];\n  input1_shared_local[3] = input1_shared[3];\n  input1_shared_local[4] = input1_shared[4];\n  input1_shared_local[5] = input1_shared[5];\n  input1_shared_local[6] = input1_shared[6];\n  input1_shared_local[7] = input1_shared[7];\n  input1_shared_local[8] = input1_shared[8];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[1] = 0.000000e+00f;\n  output0_local[2] = 0.000000e+00f;\n  output0_local[3] = 0.000000e+00f;\n  output0_local[4] = 0.000000e+00f;\n  output0_local[5] = 0.000000e+00f;\n  output0_local[6] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[9] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[18] * input1_shared_local[0]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[27] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[36] * input1_shared_local[0]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[45] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[54] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[10] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[19] * input1_shared_local[1]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[28] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[37] * input1_shared_local[1]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[46] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[55] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[11] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[20] * input1_shared_local[2]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[29] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[38] * input1_shared_local[2]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[47] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[56] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[3] * input1_shared_local[3]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[12] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[21] * input1_shared_local[3]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[30] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[39] * input1_shared_local[3]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[48] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[57] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[4] * input1_shared_local[4]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[13] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[22] * input1_shared_local[4]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[31] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[40] * input1_shared_local[4]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[49] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[58] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[5] * input1_shared_local[5]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[14] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[23] * input1_shared_local[5]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[32] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[41] * input1_shared_local[5]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[50] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[59] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[6] * input1_shared_local[6]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[15] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[24] * input1_shared_local[6]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[33] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[42] * input1_shared_local[6]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[51] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[60] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[7] * input1_shared_local[7]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[16] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[25] * input1_shared_local[7]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[34] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[43] * input1_shared_local[7]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[52] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[61] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[8] * input1_shared_local[8]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[17] * input1_shared_local[8]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[26] * input1_shared_local[8]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[35] * input1_shared_local[8]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[44] * input1_shared_local[8]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[53] * input1_shared_local[8]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[62] * input1_shared_local[8]));\n  output0[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 392)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x))] = output0_local[0];\n  output0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 392)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 56)] = output0_local[1];\n  output0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 392)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 112)] = output0_local[2];\n  output0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 392)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 168)] = output0_local[3];\n  output0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 392)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 224)] = output0_local[4];\n  output0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 392)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 280)] = output0_local[5];\n  output0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 392)) + (((int)blockIdx.x) * 28)) + ((int)threadIdx.x)) + 336)] = output0_local[6];\n}\n\n", "gridDim": [2, 8, 8192], "blockDim": [28, 1, 1]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_256_28_28_w256_1_3_3_o128_256_28_28_ws1_1_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 256, 28, 28], "filter_shape": [256, 1, 3, 3], "output_shape": [128, 256, 28, 28], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_256_28_28_w256_1_3_3_o128_256_28_28_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[900];\n  __shared__ float input1_shared[9];\n   float PaddedInput_shared_local[27];\n   float input1_shared_local[9];\n   float output0_local[7];\n  PaddedInput_shared[((((int)threadIdx.y) * 28) + ((int)threadIdx.x))] = ((((30 <= ((((int)threadIdx.y) * 28) + ((int)threadIdx.x))) && (1 <= (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) % 30))) && ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) / 30) * 28)) + (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) % 30)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 112)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 22) % 30)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 22) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 112) / 30) * 28)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 22) % 30)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 224)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 14) % 30)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 14) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 224) / 30) * 28)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 14) % 30)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 336)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 6) % 30)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 6) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 336) / 30) * 28)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 6) % 30)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 448)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 28) % 30)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 28) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 448) / 30) * 28)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 28) % 30)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 560)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 20) % 30)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 20) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 560) / 30) * 28)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 20) % 30)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 672)] = (((1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 12) % 30)) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 12) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 672) / 30) * 28)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 12) % 30)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 784)] = ((((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) < 86) && (1 <= ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 4) % 30))) && (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 4) % 30) < 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 784) / 30) * 28)) + ((((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 4) % 30)) - 29)] : 0.000000e+00f);\n  if (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) < 4) {\n    if (((int)threadIdx.y) < 1) {\n      PaddedInput_shared[(((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) + 896)] = 0.000000e+00f;\n    }\n  }\n  if (((((int)threadIdx.y) * 28) + ((int)threadIdx.x)) < 9) {\n    if (((int)threadIdx.y) < 1) {\n      input1_shared[((((int)threadIdx.y) * 28) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.y) * 28) + ((((int)blockIdx.z) & 255) * 9)) + ((int)threadIdx.x))];\n    }\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[((((int)threadIdx.y) * 210) + ((int)threadIdx.x))];\n  PaddedInput_shared_local[1] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 1)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 2)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 30)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 31)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 32)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 60)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 61)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 62)];\n  PaddedInput_shared_local[9] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 90)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 91)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 92)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 120)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 121)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 122)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 150)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 151)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 152)];\n  PaddedInput_shared_local[18] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 180)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 181)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 182)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 210)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 211)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 212)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 240)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 241)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[(((((int)threadIdx.y) * 210) + ((int)threadIdx.x)) + 242)];\n  input1_shared_local[0] = input1_shared[0];\n  input1_shared_local[1] = input1_shared[1];\n  input1_shared_local[2] = input1_shared[2];\n  input1_shared_local[3] = input1_shared[3];\n  input1_shared_local[4] = input1_shared[4];\n  input1_shared_local[5] = input1_shared[5];\n  input1_shared_local[6] = input1_shared[6];\n  input1_shared_local[7] = input1_shared[7];\n  input1_shared_local[8] = input1_shared[8];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[3] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[4] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[5] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[6] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[7] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[8] * input1_shared_local[8]));\n  output0_local[1] = 0.000000e+00f;\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[3] * input1_shared_local[0]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[4] * input1_shared_local[1]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[5] * input1_shared_local[2]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[6] * input1_shared_local[3]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[7] * input1_shared_local[4]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[8] * input1_shared_local[5]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[9] * input1_shared_local[6]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[10] * input1_shared_local[7]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[11] * input1_shared_local[8]));\n  output0_local[2] = 0.000000e+00f;\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[6] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[7] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[8] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[9] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[10] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[11] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[12] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[13] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[14] * input1_shared_local[8]));\n  output0_local[3] = 0.000000e+00f;\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[9] * input1_shared_local[0]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[10] * input1_shared_local[1]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[11] * input1_shared_local[2]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[12] * input1_shared_local[3]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[13] * input1_shared_local[4]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[14] * input1_shared_local[5]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[15] * input1_shared_local[6]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[16] * input1_shared_local[7]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[17] * input1_shared_local[8]));\n  output0_local[4] = 0.000000e+00f;\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[12] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[13] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[14] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[15] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[16] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[17] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[18] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[19] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[20] * input1_shared_local[8]));\n  output0_local[5] = 0.000000e+00f;\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[15] * input1_shared_local[0]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[16] * input1_shared_local[1]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[17] * input1_shared_local[2]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[18] * input1_shared_local[3]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[19] * input1_shared_local[4]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[20] * input1_shared_local[5]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[21] * input1_shared_local[6]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[22] * input1_shared_local[7]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[23] * input1_shared_local[8]));\n  output0_local[6] = 0.000000e+00f;\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[18] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[19] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[20] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[21] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[22] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[23] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[24] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[25] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[26] * input1_shared_local[8]));\n  output0[(((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 196)) + ((int)threadIdx.x))] = output0_local[0];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 196)) + ((int)threadIdx.x)) + 28)] = output0_local[1];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 196)) + ((int)threadIdx.x)) + 56)] = output0_local[2];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 196)) + ((int)threadIdx.x)) + 84)] = output0_local[3];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 196)) + ((int)threadIdx.x)) + 112)] = output0_local[4];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 196)) + ((int)threadIdx.x)) + 140)] = output0_local[5];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 196)) + ((int)threadIdx.x)) + 168)] = output0_local[6];\n}\n\n", "gridDim": [1, 1, 32768], "blockDim": [28, 4, 1]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_128_56_56_w128_1_3_3_o128_128_28_28_ws2_2_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 128, 56, 56], "filter_shape": [128, 1, 3, 3], "output_shape": [128, 128, 28, 28], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_128_56_56_w128_1_3_3_o128_128_28_28_ws2_2_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[855];\n  __shared__ float input1_shared[9];\n   float PaddedInput_shared_local[105];\n   float input1_shared_local[9];\n   float output0_local[14];\n  PaddedInput_shared[((int)threadIdx.x)] = (((1 <= ((int)blockIdx.y)) && (1 <= ((int)threadIdx.x))) ? input0[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + ((int)threadIdx.x)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 14)] = ((1 <= ((int)blockIdx.y)) ? input0[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + ((int)threadIdx.x)) - 43)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 28)] = ((1 <= ((int)blockIdx.y)) ? input0[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + ((int)threadIdx.x)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 42)] = ((1 <= ((int)blockIdx.y)) ? input0[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + ((int)threadIdx.x)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 56)] = (((1 <= ((((int)blockIdx.y) * 14) + ((((int)threadIdx.x) + 56) / 57))) && (1 <= ((((int)threadIdx.x) + 56) % 57))) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 56) / 57) * 56)) + ((((int)threadIdx.x) + 56) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 70)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 70) / 57) * 56)) + (((int)threadIdx.x) + 13)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 84)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 84) / 57) * 56)) + (((int)threadIdx.x) + 27)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 98)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 98) / 57) * 56)) + (((int)threadIdx.x) + 41)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 112)] = ((1 <= ((((int)threadIdx.x) + 55) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 112) / 57) * 56)) + ((((int)threadIdx.x) + 55) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 126)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 126) / 57) * 56)) + (((int)threadIdx.x) + 12)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 140)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 140) / 57) * 56)) + (((int)threadIdx.x) + 26)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 154)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 154) / 57) * 56)) + (((int)threadIdx.x) + 40)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 168)] = ((1 <= ((((int)threadIdx.x) + 54) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 168) / 57) * 56)) + ((((int)threadIdx.x) + 54) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 182)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 182) / 57) * 56)) + (((int)threadIdx.x) + 11)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 196)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 196) / 57) * 56)) + (((int)threadIdx.x) + 25)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 210)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 210) / 57) * 56)) + (((int)threadIdx.x) + 39)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 224)] = ((1 <= ((((int)threadIdx.x) + 53) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 224) / 57) * 56)) + ((((int)threadIdx.x) + 53) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 238)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 238) / 57) * 56)) + (((int)threadIdx.x) + 10)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 252)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 252) / 57) * 56)) + (((int)threadIdx.x) + 24)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 266)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 266) / 57) * 56)) + (((int)threadIdx.x) + 38)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 280)] = ((1 <= ((((int)threadIdx.x) + 52) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 280) / 57) * 56)) + ((((int)threadIdx.x) + 52) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 294)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 294) / 57) * 56)) + (((int)threadIdx.x) + 9)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 308)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 308) / 57) * 56)) + (((int)threadIdx.x) + 23)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 322)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 322) / 57) * 56)) + (((int)threadIdx.x) + 37)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 336)] = ((1 <= ((((int)threadIdx.x) + 51) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 336) / 57) * 56)) + ((((int)threadIdx.x) + 51) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 350)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 350) / 57) * 56)) + (((int)threadIdx.x) + 8)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 364)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 364) / 57) * 56)) + (((int)threadIdx.x) + 22)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 378)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 378) / 57) * 56)) + (((int)threadIdx.x) + 36)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 392)] = ((1 <= ((((int)threadIdx.x) + 50) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 392) / 57) * 56)) + ((((int)threadIdx.x) + 50) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 406)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 406) / 57) * 56)) + (((int)threadIdx.x) + 7)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 420)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 420) / 57) * 56)) + (((int)threadIdx.x) + 21)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 434)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 434) / 57) * 56)) + (((int)threadIdx.x) + 35)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 448)] = ((1 <= ((((int)threadIdx.x) + 49) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 448) / 57) * 56)) + ((((int)threadIdx.x) + 49) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 462)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 462) / 57) * 56)) + (((int)threadIdx.x) + 6)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 476)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 476) / 57) * 56)) + (((int)threadIdx.x) + 20)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 490)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 490) / 57) * 56)) + (((int)threadIdx.x) + 34)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 504)] = ((1 <= ((((int)threadIdx.x) + 48) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 504) / 57) * 56)) + ((((int)threadIdx.x) + 48) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 518)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 518) / 57) * 56)) + (((int)threadIdx.x) + 5)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 532)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 532) / 57) * 56)) + (((int)threadIdx.x) + 19)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 546)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 546) / 57) * 56)) + (((int)threadIdx.x) + 33)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 560)] = ((1 <= ((((int)threadIdx.x) + 47) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 560) / 57) * 56)) + ((((int)threadIdx.x) + 47) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 574)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 574) / 57) * 56)) + (((int)threadIdx.x) + 4)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 588)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 588) / 57) * 56)) + (((int)threadIdx.x) + 18)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 602)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 602) / 57) * 56)) + (((int)threadIdx.x) + 32)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 616)] = ((1 <= ((((int)threadIdx.x) + 46) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 616) / 57) * 56)) + ((((int)threadIdx.x) + 46) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 630)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 630) / 57) * 56)) + (((int)threadIdx.x) + 3)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 644)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 644) / 57) * 56)) + (((int)threadIdx.x) + 17)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 658)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 658) / 57) * 56)) + (((int)threadIdx.x) + 31)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 672)] = ((1 <= ((((int)threadIdx.x) + 45) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 672) / 57) * 56)) + ((((int)threadIdx.x) + 45) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 686)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 686) / 57) * 56)) + (((int)threadIdx.x) + 2)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 700)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 700) / 57) * 56)) + (((int)threadIdx.x) + 16)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 714)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 714) / 57) * 56)) + (((int)threadIdx.x) + 30)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 728)] = ((1 <= ((((int)threadIdx.x) + 44) % 57)) ? input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 728) / 57) * 56)) + ((((int)threadIdx.x) + 44) % 57)) - 57)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 742)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 742) / 57) * 56)) + (((int)threadIdx.x) + 1)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 756)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 756) / 57) * 56)) + (((int)threadIdx.x) + 15)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 770)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 770) / 57) * 56)) + (((int)threadIdx.x) + 29)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 784)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 784) / 57) * 56)) + (((int)threadIdx.x) + 43)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 798)] = ((1 <= ((int)threadIdx.x)) ? input0[((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + ((int)threadIdx.x)) + 727)] : 0.000000e+00f);\n  PaddedInput_shared[(((int)threadIdx.x) + 812)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 812) / 57) * 56)) + (((int)threadIdx.x) + 14)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 826)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 826) / 57) * 56)) + (((int)threadIdx.x) + 28)) - 57)];\n  PaddedInput_shared[(((int)threadIdx.x) + 840)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 840) / 57) * 56)) + (((int)threadIdx.x) + 42)) - 57)];\n  if (((int)threadIdx.x) < 1) {\n    PaddedInput_shared[(((int)threadIdx.x) + 854)] = input0[(((((((int)blockIdx.z) * 3136) + (((int)blockIdx.y) * 784)) + (((((int)threadIdx.x) + 854) / 57) * 56)) + (((int)threadIdx.x) + 56)) - 57)];\n  }\n  if (((int)threadIdx.x) < 9) {\n    input1_shared[((int)threadIdx.x)] = input1[(((((int)blockIdx.z) & 127) * 9) + ((int)threadIdx.x))];\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[(((int)threadIdx.x) * 4)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 114)];\n  PaddedInput_shared_local[30] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 228)];\n  PaddedInput_shared_local[45] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 342)];\n  PaddedInput_shared_local[60] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 456)];\n  PaddedInput_shared_local[75] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 570)];\n  PaddedInput_shared_local[90] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 684)];\n  PaddedInput_shared_local[1] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 1)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 115)];\n  PaddedInput_shared_local[31] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 229)];\n  PaddedInput_shared_local[46] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 343)];\n  PaddedInput_shared_local[61] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 457)];\n  PaddedInput_shared_local[76] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 571)];\n  PaddedInput_shared_local[91] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 685)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 2)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 116)];\n  PaddedInput_shared_local[32] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 230)];\n  PaddedInput_shared_local[47] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 344)];\n  PaddedInput_shared_local[62] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 458)];\n  PaddedInput_shared_local[77] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 572)];\n  PaddedInput_shared_local[92] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 686)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 3)];\n  PaddedInput_shared_local[18] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 117)];\n  PaddedInput_shared_local[33] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 231)];\n  PaddedInput_shared_local[48] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 345)];\n  PaddedInput_shared_local[63] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 459)];\n  PaddedInput_shared_local[78] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 573)];\n  PaddedInput_shared_local[93] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 687)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 4)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 118)];\n  PaddedInput_shared_local[34] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 232)];\n  PaddedInput_shared_local[49] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 346)];\n  PaddedInput_shared_local[64] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 460)];\n  PaddedInput_shared_local[79] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 574)];\n  PaddedInput_shared_local[94] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 688)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 57)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 171)];\n  PaddedInput_shared_local[35] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 285)];\n  PaddedInput_shared_local[50] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 399)];\n  PaddedInput_shared_local[65] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 513)];\n  PaddedInput_shared_local[80] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 627)];\n  PaddedInput_shared_local[95] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 741)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 58)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 172)];\n  PaddedInput_shared_local[36] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 286)];\n  PaddedInput_shared_local[51] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 400)];\n  PaddedInput_shared_local[66] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 514)];\n  PaddedInput_shared_local[81] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 628)];\n  PaddedInput_shared_local[96] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 742)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 59)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 173)];\n  PaddedInput_shared_local[37] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 287)];\n  PaddedInput_shared_local[52] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 401)];\n  PaddedInput_shared_local[67] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 515)];\n  PaddedInput_shared_local[82] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 629)];\n  PaddedInput_shared_local[97] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 743)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 60)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 174)];\n  PaddedInput_shared_local[38] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 288)];\n  PaddedInput_shared_local[53] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 402)];\n  PaddedInput_shared_local[68] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 516)];\n  PaddedInput_shared_local[83] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 630)];\n  PaddedInput_shared_local[98] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 744)];\n  PaddedInput_shared_local[9] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 61)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 175)];\n  PaddedInput_shared_local[39] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 289)];\n  PaddedInput_shared_local[54] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 403)];\n  PaddedInput_shared_local[69] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 517)];\n  PaddedInput_shared_local[84] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 631)];\n  PaddedInput_shared_local[99] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 745)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 114)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 228)];\n  PaddedInput_shared_local[40] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 342)];\n  PaddedInput_shared_local[55] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 456)];\n  PaddedInput_shared_local[70] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 570)];\n  PaddedInput_shared_local[85] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 684)];\n  PaddedInput_shared_local[100] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 798)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 115)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 229)];\n  PaddedInput_shared_local[41] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 343)];\n  PaddedInput_shared_local[56] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 457)];\n  PaddedInput_shared_local[71] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 571)];\n  PaddedInput_shared_local[86] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 685)];\n  PaddedInput_shared_local[101] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 799)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 116)];\n  PaddedInput_shared_local[27] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 230)];\n  PaddedInput_shared_local[42] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 344)];\n  PaddedInput_shared_local[57] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 458)];\n  PaddedInput_shared_local[72] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 572)];\n  PaddedInput_shared_local[87] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 686)];\n  PaddedInput_shared_local[102] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 800)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 117)];\n  PaddedInput_shared_local[28] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 231)];\n  PaddedInput_shared_local[43] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 345)];\n  PaddedInput_shared_local[58] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 459)];\n  PaddedInput_shared_local[73] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 573)];\n  PaddedInput_shared_local[88] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 687)];\n  PaddedInput_shared_local[103] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 801)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 118)];\n  PaddedInput_shared_local[29] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 232)];\n  PaddedInput_shared_local[44] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 346)];\n  PaddedInput_shared_local[59] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 460)];\n  PaddedInput_shared_local[74] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 574)];\n  PaddedInput_shared_local[89] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 688)];\n  PaddedInput_shared_local[104] = PaddedInput_shared[((((int)threadIdx.x) * 4) + 802)];\n  input1_shared_local[0] = input1_shared[0];\n  input1_shared_local[1] = input1_shared[1];\n  input1_shared_local[2] = input1_shared[2];\n  input1_shared_local[3] = input1_shared[3];\n  input1_shared_local[4] = input1_shared[4];\n  input1_shared_local[5] = input1_shared[5];\n  input1_shared_local[6] = input1_shared[6];\n  input1_shared_local[7] = input1_shared[7];\n  input1_shared_local[8] = input1_shared[8];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[2] = 0.000000e+00f;\n  output0_local[4] = 0.000000e+00f;\n  output0_local[6] = 0.000000e+00f;\n  output0_local[8] = 0.000000e+00f;\n  output0_local[10] = 0.000000e+00f;\n  output0_local[12] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[15] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[30] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[45] * input1_shared_local[0]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[60] * input1_shared_local[0]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[75] * input1_shared_local[0]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[90] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[16] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[31] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[46] * input1_shared_local[1]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[61] * input1_shared_local[1]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[76] * input1_shared_local[1]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[91] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[17] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[32] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[47] * input1_shared_local[2]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[62] * input1_shared_local[2]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[77] * input1_shared_local[2]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[92] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[5] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[20] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[35] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[50] * input1_shared_local[3]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[65] * input1_shared_local[3]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[80] * input1_shared_local[3]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[95] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[6] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[21] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[36] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[51] * input1_shared_local[4]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[66] * input1_shared_local[4]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[81] * input1_shared_local[4]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[96] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[7] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[22] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[37] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[52] * input1_shared_local[5]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[67] * input1_shared_local[5]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[82] * input1_shared_local[5]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[97] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[10] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[25] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[40] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[55] * input1_shared_local[6]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[70] * input1_shared_local[6]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[85] * input1_shared_local[6]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[100] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[11] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[26] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[41] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[56] * input1_shared_local[7]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[71] * input1_shared_local[7]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[86] * input1_shared_local[7]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[101] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[12] * input1_shared_local[8]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[27] * input1_shared_local[8]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[42] * input1_shared_local[8]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[57] * input1_shared_local[8]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[72] * input1_shared_local[8]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[87] * input1_shared_local[8]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[102] * input1_shared_local[8]));\n  output0_local[1] = 0.000000e+00f;\n  output0_local[3] = 0.000000e+00f;\n  output0_local[5] = 0.000000e+00f;\n  output0_local[7] = 0.000000e+00f;\n  output0_local[9] = 0.000000e+00f;\n  output0_local[11] = 0.000000e+00f;\n  output0_local[13] = 0.000000e+00f;\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[2] * input1_shared_local[0]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[17] * input1_shared_local[0]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[32] * input1_shared_local[0]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[47] * input1_shared_local[0]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[62] * input1_shared_local[0]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[77] * input1_shared_local[0]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[92] * input1_shared_local[0]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[3] * input1_shared_local[1]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[18] * input1_shared_local[1]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[33] * input1_shared_local[1]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[48] * input1_shared_local[1]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[63] * input1_shared_local[1]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[78] * input1_shared_local[1]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[93] * input1_shared_local[1]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[4] * input1_shared_local[2]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[19] * input1_shared_local[2]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[34] * input1_shared_local[2]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[49] * input1_shared_local[2]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[64] * input1_shared_local[2]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[79] * input1_shared_local[2]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[94] * input1_shared_local[2]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[7] * input1_shared_local[3]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[22] * input1_shared_local[3]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[37] * input1_shared_local[3]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[52] * input1_shared_local[3]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[67] * input1_shared_local[3]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[82] * input1_shared_local[3]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[97] * input1_shared_local[3]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[8] * input1_shared_local[4]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[23] * input1_shared_local[4]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[38] * input1_shared_local[4]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[53] * input1_shared_local[4]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[68] * input1_shared_local[4]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[83] * input1_shared_local[4]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[98] * input1_shared_local[4]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[9] * input1_shared_local[5]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[24] * input1_shared_local[5]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[39] * input1_shared_local[5]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[54] * input1_shared_local[5]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[69] * input1_shared_local[5]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[84] * input1_shared_local[5]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[99] * input1_shared_local[5]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[12] * input1_shared_local[6]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[27] * input1_shared_local[6]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[42] * input1_shared_local[6]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[57] * input1_shared_local[6]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[72] * input1_shared_local[6]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[87] * input1_shared_local[6]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[102] * input1_shared_local[6]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[13] * input1_shared_local[7]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[28] * input1_shared_local[7]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[43] * input1_shared_local[7]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[58] * input1_shared_local[7]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[73] * input1_shared_local[7]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[88] * input1_shared_local[7]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[103] * input1_shared_local[7]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[14] * input1_shared_local[8]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[29] * input1_shared_local[8]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[44] * input1_shared_local[8]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[59] * input1_shared_local[8]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[74] * input1_shared_local[8]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[89] * input1_shared_local[8]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[104] * input1_shared_local[8]));\n  output0[(((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2))] = output0_local[0];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 28)] = output0_local[2];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 56)] = output0_local[4];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 84)] = output0_local[6];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 112)] = output0_local[8];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 140)] = output0_local[10];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 168)] = output0_local[12];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 1)] = output0_local[1];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 29)] = output0_local[3];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 57)] = output0_local[5];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 85)] = output0_local[7];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 113)] = output0_local[9];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 141)] = output0_local[11];\n  output0[((((((int)blockIdx.z) * 784) + (((int)blockIdx.y) * 196)) + (((int)threadIdx.x) * 2)) + 169)] = output0_local[13];\n}\n\n", "gridDim": [1, 4, 16384], "blockDim": [14, 1, 1]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_512_14_14_w512_1_3_3_o128_512_14_14_ws1_1_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 512, 14, 14], "filter_shape": [512, 1, 3, 3], "output_shape": [128, 512, 14, 14], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_512_14_14_w512_1_3_3_o128_512_14_14_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[512];\n  __shared__ float input1_shared[18];\n   float PaddedInput_shared_local[27];\n   float input1_shared_local[9];\n   float output0_local[7];\n  PaddedInput_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x))] = ((((16 <= (((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x))) && (1 <= ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15))) && (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15) < 15)) ? input0[((((((int)blockIdx.z) * 392) + (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) >> 4) * 14)) + ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 56)] = (((1 <= (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) && ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15) < 15)) ? input0[((((((int)blockIdx.z) * 392) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 56) >> 4) * 14)) + (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 112)] = (((1 <= ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15)) && (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15) < 15)) ? input0[((((((int)blockIdx.z) * 392) + (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) >> 4) * 14)) + ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15)) + 83)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 168)] = (((1 <= (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) && ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15) < 15)) ? input0[((((((int)blockIdx.z) * 392) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 168) >> 4) * 14)) + (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 224)] = (((((16 <= (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 224) & 255)) && ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 224) & 255) < 240)) && (1 <= ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15))) && (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15) < 15)) ? input0[(((((((int)blockIdx.z) * 392) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 224) >> 8) * 196)) + (((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 224) & 255) >> 4) * 14)) + ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 280)] = (((1 <= (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) && ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15) < 15)) ? input0[(((((((int)blockIdx.z) * 392) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 280) >> 8) * 196)) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 24) >> 4) * 14)) + (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 336)] = (((1 <= ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15)) && (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15) < 15)) ? input0[(((((((int)blockIdx.z) * 392) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 336) >> 8) * 196)) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 80) >> 4) * 14)) + ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 392)] = (((1 <= (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) && ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15) < 15)) ? input0[(((((((int)blockIdx.z) * 392) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 392) >> 8) * 196)) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 136) >> 4) * 14)) + (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 8) & 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 448)] = (((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) < 48) && (1 <= ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15))) && (((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15) < 15)) ? input0[(((((((int)blockIdx.z) * 392) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 448) >> 8) * 196)) + ((((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 192) >> 4) * 14)) + ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) & 15)) - 15)] : 0.000000e+00f);\n  if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) < 8) {\n    if (((((int)threadIdx.z) * 2) + ((int)threadIdx.y)) < 1) {\n      if (((int)threadIdx.z) < 1) {\n        PaddedInput_shared[((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) + 504)] = 0.000000e+00f;\n      }\n    }\n  }\n  if ((((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x)) < 18) {\n    if (((((int)threadIdx.z) * 2) + ((int)threadIdx.y)) < 2) {\n      if (((int)threadIdx.z) < 1) {\n        input1_shared[(((((int)threadIdx.z) * 28) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x))] = input1[((((((int)threadIdx.z) * 28) + ((((int)blockIdx.z) & 255) * 18)) + (((int)threadIdx.y) * 14)) + ((int)threadIdx.x))];\n      }\n    }\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[(((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x))];\n  PaddedInput_shared_local[1] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 1)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 2)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 16)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 17)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 18)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 32)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 33)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 34)];\n  PaddedInput_shared_local[9] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 48)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 49)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 50)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 64)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 65)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 66)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 80)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 81)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 82)];\n  PaddedInput_shared_local[18] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 96)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 97)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 98)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 112)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 113)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 114)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 128)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 129)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[((((((int)threadIdx.z) * 256) + (((int)threadIdx.y) * 112)) + ((int)threadIdx.x)) + 130)];\n  input1_shared_local[0] = input1_shared[(((int)threadIdx.z) * 9)];\n  input1_shared_local[1] = input1_shared[((((int)threadIdx.z) * 9) + 1)];\n  input1_shared_local[2] = input1_shared[((((int)threadIdx.z) * 9) + 2)];\n  input1_shared_local[3] = input1_shared[((((int)threadIdx.z) * 9) + 3)];\n  input1_shared_local[4] = input1_shared[((((int)threadIdx.z) * 9) + 4)];\n  input1_shared_local[5] = input1_shared[((((int)threadIdx.z) * 9) + 5)];\n  input1_shared_local[6] = input1_shared[((((int)threadIdx.z) * 9) + 6)];\n  input1_shared_local[7] = input1_shared[((((int)threadIdx.z) * 9) + 7)];\n  input1_shared_local[8] = input1_shared[((((int)threadIdx.z) * 9) + 8)];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[3] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[4] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[5] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[6] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[7] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[8] * input1_shared_local[8]));\n  output0_local[1] = 0.000000e+00f;\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[3] * input1_shared_local[0]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[4] * input1_shared_local[1]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[5] * input1_shared_local[2]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[6] * input1_shared_local[3]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[7] * input1_shared_local[4]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[8] * input1_shared_local[5]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[9] * input1_shared_local[6]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[10] * input1_shared_local[7]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[11] * input1_shared_local[8]));\n  output0_local[2] = 0.000000e+00f;\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[6] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[7] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[8] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[9] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[10] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[11] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[12] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[13] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[14] * input1_shared_local[8]));\n  output0_local[3] = 0.000000e+00f;\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[9] * input1_shared_local[0]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[10] * input1_shared_local[1]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[11] * input1_shared_local[2]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[12] * input1_shared_local[3]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[13] * input1_shared_local[4]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[14] * input1_shared_local[5]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[15] * input1_shared_local[6]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[16] * input1_shared_local[7]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[17] * input1_shared_local[8]));\n  output0_local[4] = 0.000000e+00f;\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[12] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[13] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[14] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[15] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[16] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[17] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[18] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[19] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[20] * input1_shared_local[8]));\n  output0_local[5] = 0.000000e+00f;\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[15] * input1_shared_local[0]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[16] * input1_shared_local[1]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[17] * input1_shared_local[2]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[18] * input1_shared_local[3]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[19] * input1_shared_local[4]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[20] * input1_shared_local[5]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[21] * input1_shared_local[6]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[22] * input1_shared_local[7]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[23] * input1_shared_local[8]));\n  output0_local[6] = 0.000000e+00f;\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[18] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[19] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[20] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[21] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[22] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[23] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[24] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[25] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[26] * input1_shared_local[8]));\n  output0[((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 98)) + ((int)threadIdx.x))] = output0_local[0];\n  output0[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 98)) + ((int)threadIdx.x)) + 14)] = output0_local[1];\n  output0[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 98)) + ((int)threadIdx.x)) + 28)] = output0_local[2];\n  output0[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 98)) + ((int)threadIdx.x)) + 42)] = output0_local[3];\n  output0[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 98)) + ((int)threadIdx.x)) + 56)] = output0_local[4];\n  output0[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 98)) + ((int)threadIdx.x)) + 70)] = output0_local[5];\n  output0[(((((((int)blockIdx.z) * 392) + (((int)threadIdx.z) * 196)) + (((int)threadIdx.y) * 98)) + ((int)threadIdx.x)) + 84)] = output0_local[6];\n}\n\n", "gridDim": [1, 1, 32768], "blockDim": [14, 2, 2]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_32_112_112_w32_1_3_3_o128_32_112_112_ws1_1_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 32, 112, 112], "filter_shape": [32, 1, 3, 3], "output_shape": [128, 32, 112, 112], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_32_112_112_w32_1_3_3_o128_32_112_112_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[1140];\n  __shared__ float input1_shared[9];\n   float PaddedInput_shared_local[27];\n   float input1_shared_local[9];\n   float output0_local[7];\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {\n    if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) < 1140) {\n      PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x))] = (((((1 <= ((((int)blockIdx.y) * 8) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) / 114))) && (((((int)blockIdx.y) * 8) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) / 114)) < 113)) && (1 <= ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) % 114))) && (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) % 114) < 113)) ? input0[(((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 896)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) / 114) * 112)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 128) + (((int)threadIdx.y) * 16)) + ((int)threadIdx.x)) % 114)) - 113)] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.y) * 16) + ((int)threadIdx.x)) < 9) {\n    if (((int)threadIdx.y) < 1) {\n      input1_shared[((((int)threadIdx.y) * 16) + ((int)threadIdx.x))] = input1[(((((int)threadIdx.y) * 16) + ((((int)blockIdx.z) & 31) * 9)) + ((int)threadIdx.x))];\n    }\n  }\n  __syncthreads();\n  for (int ax2 = 0; ax2 < 3; ++ax2) {\n    for (int ax3 = 0; ax3 < 9; ++ax3) {\n      PaddedInput_shared_local[((ax2 * 9) + ax3)] = PaddedInput_shared[((((ax2 * 114) + (((int)threadIdx.y) * 114)) + (((int)threadIdx.x) * 7)) + ax3)];\n    }\n  }\n  for (int ax21 = 0; ax21 < 3; ++ax21) {\n    for (int ax31 = 0; ax31 < 3; ++ax31) {\n      input1_shared_local[((ax21 * 3) + ax31)] = input1_shared[((ax21 * 3) + ax31)];\n    }\n  }\n  for (int j_c = 0; j_c < 7; ++j_c) {\n    output0_local[j_c] = 0.000000e+00f;\n    for (int di = 0; di < 3; ++di) {\n      for (int dj = 0; dj < 3; ++dj) {\n        output0_local[j_c] = (output0_local[j_c] + (PaddedInput_shared_local[(((di * 9) + j_c) + dj)] * input1_shared_local[((di * 3) + dj)]));\n      }\n    }\n  }\n  for (int j_inner_inner_inner = 0; j_inner_inner_inner < 7; ++j_inner_inner_inner) {\n    output0[(((((((int)blockIdx.z) * 12544) + (((int)blockIdx.y) * 896)) + (((int)threadIdx.y) * 112)) + (((int)threadIdx.x) * 7)) + j_inner_inner_inner)] = output0_local[j_inner_inner_inner];\n  }\n}\n\n", "gridDim": [1, 14, 4096], "blockDim": [16, 8, 1]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_512_14_14_w512_1_3_3_o128_512_7_7_ws2_2_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 512, 14, 14], "filter_shape": [512, 1, 3, 3], "output_shape": [128, 512, 7, 7], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_512_14_14_w512_1_3_3_o128_512_7_7_ws2_2_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[900];\n  __shared__ float input1_shared[36];\n   float PaddedInput_shared_local[126];\n   float input1_shared_local[18];\n   float output0_local[14];\n  PaddedInput_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.y))] = 0.000000e+00f;\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14)] = (((1 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15))) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 28)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 28) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 42)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 42) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 56)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 56) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 70)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 70) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 84)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 84) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 98)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 98) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 112)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 112) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 126)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 126) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 140)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 140) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 154)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 154) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 168)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 168) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 182)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 182) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 196)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 196) / 15) * 14)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1)) - 15)];\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 210)] = ((1 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) ? input0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) + 181)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 224)] = (((15 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 224) % 225)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15))) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 224) / 225) * 196)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 224) % 225) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 238)] = (((2 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15))) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 238) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 252)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 252) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 27) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 266)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 266) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 41) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 280)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 280) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 55) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 294)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 294) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 69) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 308)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 308) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 83) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 322)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 322) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 97) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 336)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 336) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 111) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 350)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 350) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 125) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 364)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 364) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 139) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 378)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 378) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 153) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 392)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 392) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 167) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 406)] = input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 406) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 181) / 15) * 14)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1)) - 15)];\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 420)] = ((1 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) ? input0[((((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 420) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 195) / 15) * 14)) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 434)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 434) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 209) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 448)] = (((15 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 223) % 225)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15))) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 448) / 225) * 196)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 223) % 225) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 462)] = (((3 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15))) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 462) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 476)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 476) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 26) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 490)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 490) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 40) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 504)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 504) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 54) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 518)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 518) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 68) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 532)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 532) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 82) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 546)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 546) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 96) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 560)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 560) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 110) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 574)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 574) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 124) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 588)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 588) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 138) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 602)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 602) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 152) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 616)] = input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 616) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 166) / 15) * 14)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1)) - 15)];\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 630)] = ((1 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) ? input0[((((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 630) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 180) / 15) * 14)) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 644)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 644) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 194) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 658)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 658) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 208) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 672)] = (((15 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 222) % 225)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15))) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 672) / 225) * 196)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 222) % 225) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 686)] = (((4 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15))) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 686) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 700)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 700) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 25) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 10) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 714)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 714) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 39) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 9) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 728)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 728) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 53) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 742)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 742) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 67) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 756)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 756) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 81) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 770)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 770) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 95) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 784)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 784) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 109) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 798)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 798) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 123) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 812)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 812) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 137) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 826)] = input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 826) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 151) / 15) * 14)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1)) - 15)];\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 840)] = ((1 <= ((((int)threadIdx.z) * 7) + ((int)threadIdx.y))) ? input0[((((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 840) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 165) / 15) * 14)) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 854)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 854) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 179) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 868)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 868) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 193) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 13) % 15)) - 15)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 882)] = ((1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 882) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 207) / 15) * 14)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 15)) - 15)] : 0.000000e+00f);\n  if (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) < 4) {\n    if (((int)threadIdx.z) < 1) {\n      PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 896)] = input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 896) / 225) * 196)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 221) / 15) * 14)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 11)) - 15)];\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) & 127) * 36) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y))];\n  input1_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 14)] = input1[(((((((int)blockIdx.z) & 127) * 36) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) + 14)];\n  if (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) < 8) {\n    input1_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 28)] = input1[(((((((int)blockIdx.z) & 127) * 36) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) + 28)];\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30))];\n  PaddedInput_shared_local[18] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 2)];\n  PaddedInput_shared_local[36] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 4)];\n  PaddedInput_shared_local[54] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 6)];\n  PaddedInput_shared_local[72] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 8)];\n  PaddedInput_shared_local[90] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 10)];\n  PaddedInput_shared_local[108] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 12)];\n  PaddedInput_shared_local[1] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 1)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 3)];\n  PaddedInput_shared_local[37] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 5)];\n  PaddedInput_shared_local[55] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 7)];\n  PaddedInput_shared_local[73] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 9)];\n  PaddedInput_shared_local[91] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 11)];\n  PaddedInput_shared_local[109] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 13)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 2)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 4)];\n  PaddedInput_shared_local[38] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 6)];\n  PaddedInput_shared_local[56] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 8)];\n  PaddedInput_shared_local[74] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 10)];\n  PaddedInput_shared_local[92] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 12)];\n  PaddedInput_shared_local[110] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 14)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 15)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 17)];\n  PaddedInput_shared_local[39] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 19)];\n  PaddedInput_shared_local[57] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 21)];\n  PaddedInput_shared_local[75] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 23)];\n  PaddedInput_shared_local[93] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 25)];\n  PaddedInput_shared_local[111] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 27)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 16)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 18)];\n  PaddedInput_shared_local[40] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 20)];\n  PaddedInput_shared_local[58] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 22)];\n  PaddedInput_shared_local[76] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 24)];\n  PaddedInput_shared_local[94] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 26)];\n  PaddedInput_shared_local[112] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 28)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 17)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 19)];\n  PaddedInput_shared_local[41] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 21)];\n  PaddedInput_shared_local[59] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 23)];\n  PaddedInput_shared_local[77] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 25)];\n  PaddedInput_shared_local[95] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 27)];\n  PaddedInput_shared_local[113] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 29)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 30)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 32)];\n  PaddedInput_shared_local[42] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 34)];\n  PaddedInput_shared_local[60] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 36)];\n  PaddedInput_shared_local[78] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 38)];\n  PaddedInput_shared_local[96] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 40)];\n  PaddedInput_shared_local[114] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 42)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 31)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 33)];\n  PaddedInput_shared_local[43] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 35)];\n  PaddedInput_shared_local[61] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 37)];\n  PaddedInput_shared_local[79] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 39)];\n  PaddedInput_shared_local[97] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 41)];\n  PaddedInput_shared_local[115] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 43)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 32)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 34)];\n  PaddedInput_shared_local[44] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 36)];\n  PaddedInput_shared_local[62] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 38)];\n  PaddedInput_shared_local[80] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 40)];\n  PaddedInput_shared_local[98] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 42)];\n  PaddedInput_shared_local[116] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 44)];\n  PaddedInput_shared_local[9] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 225)];\n  PaddedInput_shared_local[27] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 227)];\n  PaddedInput_shared_local[45] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 229)];\n  PaddedInput_shared_local[63] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 231)];\n  PaddedInput_shared_local[81] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 233)];\n  PaddedInput_shared_local[99] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 235)];\n  PaddedInput_shared_local[117] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 237)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 226)];\n  PaddedInput_shared_local[28] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 228)];\n  PaddedInput_shared_local[46] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 230)];\n  PaddedInput_shared_local[64] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 232)];\n  PaddedInput_shared_local[82] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 234)];\n  PaddedInput_shared_local[100] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 236)];\n  PaddedInput_shared_local[118] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 238)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 227)];\n  PaddedInput_shared_local[29] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 229)];\n  PaddedInput_shared_local[47] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 231)];\n  PaddedInput_shared_local[65] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 233)];\n  PaddedInput_shared_local[83] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 235)];\n  PaddedInput_shared_local[101] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 237)];\n  PaddedInput_shared_local[119] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 239)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 240)];\n  PaddedInput_shared_local[30] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 242)];\n  PaddedInput_shared_local[48] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 244)];\n  PaddedInput_shared_local[66] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 246)];\n  PaddedInput_shared_local[84] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 248)];\n  PaddedInput_shared_local[102] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 250)];\n  PaddedInput_shared_local[120] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 252)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 241)];\n  PaddedInput_shared_local[31] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 243)];\n  PaddedInput_shared_local[49] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 245)];\n  PaddedInput_shared_local[67] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 247)];\n  PaddedInput_shared_local[85] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 249)];\n  PaddedInput_shared_local[103] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 251)];\n  PaddedInput_shared_local[121] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 253)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 242)];\n  PaddedInput_shared_local[32] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 244)];\n  PaddedInput_shared_local[50] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 246)];\n  PaddedInput_shared_local[68] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 248)];\n  PaddedInput_shared_local[86] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 250)];\n  PaddedInput_shared_local[104] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 252)];\n  PaddedInput_shared_local[122] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 254)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 255)];\n  PaddedInput_shared_local[33] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 257)];\n  PaddedInput_shared_local[51] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 259)];\n  PaddedInput_shared_local[69] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 261)];\n  PaddedInput_shared_local[87] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 263)];\n  PaddedInput_shared_local[105] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 265)];\n  PaddedInput_shared_local[123] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 267)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 256)];\n  PaddedInput_shared_local[34] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 258)];\n  PaddedInput_shared_local[52] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 260)];\n  PaddedInput_shared_local[70] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 262)];\n  PaddedInput_shared_local[88] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 264)];\n  PaddedInput_shared_local[106] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 266)];\n  PaddedInput_shared_local[124] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 268)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 257)];\n  PaddedInput_shared_local[35] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 259)];\n  PaddedInput_shared_local[53] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 261)];\n  PaddedInput_shared_local[71] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 263)];\n  PaddedInput_shared_local[89] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 265)];\n  PaddedInput_shared_local[107] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 267)];\n  PaddedInput_shared_local[125] = PaddedInput_shared[(((((int)threadIdx.z) * 450) + (((int)threadIdx.y) * 30)) + 269)];\n  input1_shared_local[0] = input1_shared[(((int)threadIdx.z) * 18)];\n  input1_shared_local[1] = input1_shared[((((int)threadIdx.z) * 18) + 1)];\n  input1_shared_local[2] = input1_shared[((((int)threadIdx.z) * 18) + 2)];\n  input1_shared_local[3] = input1_shared[((((int)threadIdx.z) * 18) + 3)];\n  input1_shared_local[4] = input1_shared[((((int)threadIdx.z) * 18) + 4)];\n  input1_shared_local[5] = input1_shared[((((int)threadIdx.z) * 18) + 5)];\n  input1_shared_local[6] = input1_shared[((((int)threadIdx.z) * 18) + 6)];\n  input1_shared_local[7] = input1_shared[((((int)threadIdx.z) * 18) + 7)];\n  input1_shared_local[8] = input1_shared[((((int)threadIdx.z) * 18) + 8)];\n  input1_shared_local[9] = input1_shared[((((int)threadIdx.z) * 18) + 9)];\n  input1_shared_local[10] = input1_shared[((((int)threadIdx.z) * 18) + 10)];\n  input1_shared_local[11] = input1_shared[((((int)threadIdx.z) * 18) + 11)];\n  input1_shared_local[12] = input1_shared[((((int)threadIdx.z) * 18) + 12)];\n  input1_shared_local[13] = input1_shared[((((int)threadIdx.z) * 18) + 13)];\n  input1_shared_local[14] = input1_shared[((((int)threadIdx.z) * 18) + 14)];\n  input1_shared_local[15] = input1_shared[((((int)threadIdx.z) * 18) + 15)];\n  input1_shared_local[16] = input1_shared[((((int)threadIdx.z) * 18) + 16)];\n  input1_shared_local[17] = input1_shared[((((int)threadIdx.z) * 18) + 17)];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[2] = 0.000000e+00f;\n  output0_local[4] = 0.000000e+00f;\n  output0_local[6] = 0.000000e+00f;\n  output0_local[8] = 0.000000e+00f;\n  output0_local[10] = 0.000000e+00f;\n  output0_local[12] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[18] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[36] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[54] * input1_shared_local[0]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[72] * input1_shared_local[0]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[90] * input1_shared_local[0]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[108] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[19] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[37] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[55] * input1_shared_local[1]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[73] * input1_shared_local[1]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[91] * input1_shared_local[1]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[109] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[20] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[38] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[56] * input1_shared_local[2]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[74] * input1_shared_local[2]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[92] * input1_shared_local[2]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[110] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[3] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[21] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[39] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[57] * input1_shared_local[3]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[75] * input1_shared_local[3]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[93] * input1_shared_local[3]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[111] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[4] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[22] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[40] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[58] * input1_shared_local[4]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[76] * input1_shared_local[4]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[94] * input1_shared_local[4]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[112] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[5] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[23] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[41] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[59] * input1_shared_local[5]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[77] * input1_shared_local[5]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[95] * input1_shared_local[5]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[113] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[6] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[24] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[42] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[60] * input1_shared_local[6]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[78] * input1_shared_local[6]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[96] * input1_shared_local[6]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[114] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[7] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[25] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[43] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[61] * input1_shared_local[7]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[79] * input1_shared_local[7]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[97] * input1_shared_local[7]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[115] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[8] * input1_shared_local[8]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[26] * input1_shared_local[8]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[44] * input1_shared_local[8]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[62] * input1_shared_local[8]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[80] * input1_shared_local[8]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[98] * input1_shared_local[8]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[116] * input1_shared_local[8]));\n  output0_local[1] = 0.000000e+00f;\n  output0_local[3] = 0.000000e+00f;\n  output0_local[5] = 0.000000e+00f;\n  output0_local[7] = 0.000000e+00f;\n  output0_local[9] = 0.000000e+00f;\n  output0_local[11] = 0.000000e+00f;\n  output0_local[13] = 0.000000e+00f;\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[9] * input1_shared_local[9]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[27] * input1_shared_local[9]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[45] * input1_shared_local[9]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[63] * input1_shared_local[9]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[81] * input1_shared_local[9]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[99] * input1_shared_local[9]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[117] * input1_shared_local[9]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[10] * input1_shared_local[10]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[28] * input1_shared_local[10]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[46] * input1_shared_local[10]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[64] * input1_shared_local[10]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[82] * input1_shared_local[10]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[100] * input1_shared_local[10]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[118] * input1_shared_local[10]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[11] * input1_shared_local[11]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[29] * input1_shared_local[11]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[47] * input1_shared_local[11]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[65] * input1_shared_local[11]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[83] * input1_shared_local[11]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[101] * input1_shared_local[11]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[119] * input1_shared_local[11]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[12] * input1_shared_local[12]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[30] * input1_shared_local[12]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[48] * input1_shared_local[12]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[66] * input1_shared_local[12]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[84] * input1_shared_local[12]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[102] * input1_shared_local[12]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[120] * input1_shared_local[12]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[13] * input1_shared_local[13]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[31] * input1_shared_local[13]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[49] * input1_shared_local[13]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[67] * input1_shared_local[13]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[85] * input1_shared_local[13]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[103] * input1_shared_local[13]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[121] * input1_shared_local[13]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[14] * input1_shared_local[14]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[32] * input1_shared_local[14]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[50] * input1_shared_local[14]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[68] * input1_shared_local[14]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[86] * input1_shared_local[14]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[104] * input1_shared_local[14]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[122] * input1_shared_local[14]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[15] * input1_shared_local[15]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[33] * input1_shared_local[15]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[51] * input1_shared_local[15]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[69] * input1_shared_local[15]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[87] * input1_shared_local[15]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[105] * input1_shared_local[15]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[123] * input1_shared_local[15]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[16] * input1_shared_local[16]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[34] * input1_shared_local[16]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[52] * input1_shared_local[16]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[70] * input1_shared_local[16]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[88] * input1_shared_local[16]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[106] * input1_shared_local[16]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[124] * input1_shared_local[16]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[17] * input1_shared_local[17]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[35] * input1_shared_local[17]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[53] * input1_shared_local[17]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[71] * input1_shared_local[17]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[89] * input1_shared_local[17]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[107] * input1_shared_local[17]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[125] * input1_shared_local[17]));\n  output0[(((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7))] = output0_local[0];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 1)] = output0_local[2];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 2)] = output0_local[4];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 3)] = output0_local[6];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 4)] = output0_local[8];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 5)] = output0_local[10];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 6)] = output0_local[12];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 49)] = output0_local[1];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 50)] = output0_local[3];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 51)] = output0_local[5];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 52)] = output0_local[7];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 53)] = output0_local[9];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 54)] = output0_local[11];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.z) * 98)) + (((int)threadIdx.y) * 7)) + 55)] = output0_local[13];\n}\n\n", "gridDim": [1, 1, 16384], "blockDim": [1, 7, 2]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_256_28_28_w256_1_3_3_o128_256_14_14_ws2_2_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 256, 28, 28], "filter_shape": [256, 1, 3, 3], "output_shape": [128, 256, 14, 14], "window_movement_strides": [2, 2], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_256_28_28_w256_1_3_3_o128_256_14_14_ws2_2_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[841];\n  __shared__ float input1_shared[9];\n   float PaddedInput_shared_local[75];\n   float input1_shared_local[9];\n   float output0_local[14];\n  PaddedInput_shared[((((int)threadIdx.y) * 2) + ((int)threadIdx.x))] = 0.000000e+00f;\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 14)] = 0.000000e+00f;\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 28)] = (((1 <= ((((int)threadIdx.y) * 2) + ((int)threadIdx.x))) && (1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 28) % 29))) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 28) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 28) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 42)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 42) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 13)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 56)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 27) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 56) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 27) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 70)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 70) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 12)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 84)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 26) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 84) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 26) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 98)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 98) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 11)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 112)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 25) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 112) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 25) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 126)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 126) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 10)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 140)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 24) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 140) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 24) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 154)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 154) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 9)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 168)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 23) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 168) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 23) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 182)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 182) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 8)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 196)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 22) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 196) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 22) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 210)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 210) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 7)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 224)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 21) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 224) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 21) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 238)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 238) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 6)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 252)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 20) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 252) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 20) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 266)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 266) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 5)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 280)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 19) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 280) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 19) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 294)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 294) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 4)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 308)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 18) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 308) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 18) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 322)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 322) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 3)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 336)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 17) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 336) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 17) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 350)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 350) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 2)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 364)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 16) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 364) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 16) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 378)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 378) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 1)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 392)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 392) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 15)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 406)] = ((1 <= ((((int)threadIdx.y) * 2) + ((int)threadIdx.x))) ? input0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x)) + 363)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 420)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 420) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 14)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 434)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 28) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 434) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 28) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 448)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 448) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 13)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 462)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 27) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 462) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 27) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 476)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 476) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 12)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 490)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 26) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 490) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 26) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 504)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 504) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 11)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 518)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 25) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 518) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 25) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 532)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 532) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 10)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 546)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 24) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 546) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 24) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 560)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 560) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 9)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 574)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 23) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 574) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 23) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 588)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 588) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 8)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 602)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 22) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 602) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 22) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 616)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 616) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 7)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 630)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 21) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 630) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 21) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 644)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 644) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 6)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 658)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 20) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 658) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 20) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 672)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 672) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 5)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 686)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 19) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 686) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 19) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 700)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 700) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 4)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 714)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 18) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 714) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 18) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 728)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 728) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 3)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 742)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 17) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 742) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 17) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 756)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 756) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 2)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 770)] = ((1 <= ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 16) % 29)) ? input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 770) / 29) * 28)) + ((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 16) % 29)) - 29)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 784)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 784) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 1)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 798)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 798) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 15)) - 29)];\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 812)] = ((1 <= ((((int)threadIdx.y) * 2) + ((int)threadIdx.x))) ? input0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x)) + 755)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 826)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 826) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 14)) - 29)];\n  if (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) < 1) {\n    if (((int)threadIdx.y) < 1) {\n      PaddedInput_shared[(((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 840)] = input0[((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 840) / 29) * 28)) + (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) + 28)) - 29)];\n    }\n  }\n  if (((((int)threadIdx.y) * 2) + ((int)threadIdx.x)) < 9) {\n    if (((int)threadIdx.y) < 5) {\n      input1_shared[((((int)threadIdx.y) * 2) + ((int)threadIdx.x))] = input1[((((((int)blockIdx.z) & 255) * 9) + (((int)threadIdx.y) * 2)) + ((int)threadIdx.x))];\n    }\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14))];\n  PaddedInput_shared_local[1] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 1)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 2)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 3)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 4)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 5)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 6)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 7)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 8)];\n  PaddedInput_shared_local[9] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 9)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 10)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 11)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 12)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 13)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 14)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 29)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 30)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 31)];\n  PaddedInput_shared_local[18] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 32)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 33)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 34)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 35)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 36)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 37)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 38)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 39)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 40)];\n  PaddedInput_shared_local[27] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 41)];\n  PaddedInput_shared_local[28] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 42)];\n  PaddedInput_shared_local[29] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 43)];\n  PaddedInput_shared_local[30] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 58)];\n  PaddedInput_shared_local[31] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 59)];\n  PaddedInput_shared_local[32] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 60)];\n  PaddedInput_shared_local[33] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 61)];\n  PaddedInput_shared_local[34] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 62)];\n  PaddedInput_shared_local[35] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 63)];\n  PaddedInput_shared_local[36] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 64)];\n  PaddedInput_shared_local[37] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 65)];\n  PaddedInput_shared_local[38] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 66)];\n  PaddedInput_shared_local[39] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 67)];\n  PaddedInput_shared_local[40] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 68)];\n  PaddedInput_shared_local[41] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 69)];\n  PaddedInput_shared_local[42] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 70)];\n  PaddedInput_shared_local[43] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 71)];\n  PaddedInput_shared_local[44] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 72)];\n  PaddedInput_shared_local[45] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 87)];\n  PaddedInput_shared_local[46] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 88)];\n  PaddedInput_shared_local[47] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 89)];\n  PaddedInput_shared_local[48] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 90)];\n  PaddedInput_shared_local[49] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 91)];\n  PaddedInput_shared_local[50] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 92)];\n  PaddedInput_shared_local[51] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 93)];\n  PaddedInput_shared_local[52] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 94)];\n  PaddedInput_shared_local[53] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 95)];\n  PaddedInput_shared_local[54] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 96)];\n  PaddedInput_shared_local[55] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 97)];\n  PaddedInput_shared_local[56] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 98)];\n  PaddedInput_shared_local[57] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 99)];\n  PaddedInput_shared_local[58] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 100)];\n  PaddedInput_shared_local[59] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 101)];\n  PaddedInput_shared_local[60] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 116)];\n  PaddedInput_shared_local[61] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 117)];\n  PaddedInput_shared_local[62] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 118)];\n  PaddedInput_shared_local[63] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 119)];\n  PaddedInput_shared_local[64] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 120)];\n  PaddedInput_shared_local[65] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 121)];\n  PaddedInput_shared_local[66] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 122)];\n  PaddedInput_shared_local[67] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 123)];\n  PaddedInput_shared_local[68] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 124)];\n  PaddedInput_shared_local[69] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 125)];\n  PaddedInput_shared_local[70] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 126)];\n  PaddedInput_shared_local[71] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 127)];\n  PaddedInput_shared_local[72] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 128)];\n  PaddedInput_shared_local[73] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 129)];\n  PaddedInput_shared_local[74] = PaddedInput_shared[(((((int)threadIdx.y) * 116) + (((int)threadIdx.x) * 14)) + 130)];\n  input1_shared_local[0] = input1_shared[0];\n  input1_shared_local[1] = input1_shared[1];\n  input1_shared_local[2] = input1_shared[2];\n  input1_shared_local[3] = input1_shared[3];\n  input1_shared_local[4] = input1_shared[4];\n  input1_shared_local[5] = input1_shared[5];\n  input1_shared_local[6] = input1_shared[6];\n  input1_shared_local[7] = input1_shared[7];\n  input1_shared_local[8] = input1_shared[8];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[15] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[16] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[17] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[30] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[31] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[32] * input1_shared_local[8]));\n  output0_local[1] = 0.000000e+00f;\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[2] * input1_shared_local[0]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[3] * input1_shared_local[1]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[4] * input1_shared_local[2]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[17] * input1_shared_local[3]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[18] * input1_shared_local[4]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[19] * input1_shared_local[5]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[32] * input1_shared_local[6]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[33] * input1_shared_local[7]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[34] * input1_shared_local[8]));\n  output0_local[2] = 0.000000e+00f;\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[4] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[5] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[6] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[19] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[20] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[21] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[34] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[35] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[36] * input1_shared_local[8]));\n  output0_local[3] = 0.000000e+00f;\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[6] * input1_shared_local[0]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[7] * input1_shared_local[1]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[8] * input1_shared_local[2]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[21] * input1_shared_local[3]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[22] * input1_shared_local[4]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[23] * input1_shared_local[5]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[36] * input1_shared_local[6]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[37] * input1_shared_local[7]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[38] * input1_shared_local[8]));\n  output0_local[4] = 0.000000e+00f;\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[8] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[9] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[10] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[23] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[24] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[25] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[38] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[39] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[40] * input1_shared_local[8]));\n  output0_local[5] = 0.000000e+00f;\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[10] * input1_shared_local[0]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[11] * input1_shared_local[1]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[12] * input1_shared_local[2]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[25] * input1_shared_local[3]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[26] * input1_shared_local[4]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[27] * input1_shared_local[5]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[40] * input1_shared_local[6]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[41] * input1_shared_local[7]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[42] * input1_shared_local[8]));\n  output0_local[6] = 0.000000e+00f;\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[12] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[13] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[14] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[27] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[28] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[29] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[42] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[43] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[44] * input1_shared_local[8]));\n  output0_local[7] = 0.000000e+00f;\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[30] * input1_shared_local[0]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[31] * input1_shared_local[1]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[32] * input1_shared_local[2]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[45] * input1_shared_local[3]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[46] * input1_shared_local[4]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[47] * input1_shared_local[5]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[60] * input1_shared_local[6]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[61] * input1_shared_local[7]));\n  output0_local[7] = (output0_local[7] + (PaddedInput_shared_local[62] * input1_shared_local[8]));\n  output0_local[8] = 0.000000e+00f;\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[32] * input1_shared_local[0]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[33] * input1_shared_local[1]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[34] * input1_shared_local[2]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[47] * input1_shared_local[3]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[48] * input1_shared_local[4]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[49] * input1_shared_local[5]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[62] * input1_shared_local[6]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[63] * input1_shared_local[7]));\n  output0_local[8] = (output0_local[8] + (PaddedInput_shared_local[64] * input1_shared_local[8]));\n  output0_local[9] = 0.000000e+00f;\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[34] * input1_shared_local[0]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[35] * input1_shared_local[1]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[36] * input1_shared_local[2]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[49] * input1_shared_local[3]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[50] * input1_shared_local[4]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[51] * input1_shared_local[5]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[64] * input1_shared_local[6]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[65] * input1_shared_local[7]));\n  output0_local[9] = (output0_local[9] + (PaddedInput_shared_local[66] * input1_shared_local[8]));\n  output0_local[10] = 0.000000e+00f;\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[36] * input1_shared_local[0]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[37] * input1_shared_local[1]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[38] * input1_shared_local[2]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[51] * input1_shared_local[3]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[52] * input1_shared_local[4]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[53] * input1_shared_local[5]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[66] * input1_shared_local[6]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[67] * input1_shared_local[7]));\n  output0_local[10] = (output0_local[10] + (PaddedInput_shared_local[68] * input1_shared_local[8]));\n  output0_local[11] = 0.000000e+00f;\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[38] * input1_shared_local[0]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[39] * input1_shared_local[1]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[40] * input1_shared_local[2]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[53] * input1_shared_local[3]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[54] * input1_shared_local[4]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[55] * input1_shared_local[5]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[68] * input1_shared_local[6]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[69] * input1_shared_local[7]));\n  output0_local[11] = (output0_local[11] + (PaddedInput_shared_local[70] * input1_shared_local[8]));\n  output0_local[12] = 0.000000e+00f;\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[40] * input1_shared_local[0]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[41] * input1_shared_local[1]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[42] * input1_shared_local[2]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[55] * input1_shared_local[3]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[56] * input1_shared_local[4]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[57] * input1_shared_local[5]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[70] * input1_shared_local[6]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[71] * input1_shared_local[7]));\n  output0_local[12] = (output0_local[12] + (PaddedInput_shared_local[72] * input1_shared_local[8]));\n  output0_local[13] = 0.000000e+00f;\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[42] * input1_shared_local[0]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[43] * input1_shared_local[1]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[44] * input1_shared_local[2]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[57] * input1_shared_local[3]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[58] * input1_shared_local[4]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[59] * input1_shared_local[5]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[72] * input1_shared_local[6]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[73] * input1_shared_local[7]));\n  output0_local[13] = (output0_local[13] + (PaddedInput_shared_local[74] * input1_shared_local[8]));\n  output0[(((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7))] = output0_local[0];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 1)] = output0_local[1];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 2)] = output0_local[2];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 3)] = output0_local[3];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 4)] = output0_local[4];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 5)] = output0_local[5];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 6)] = output0_local[6];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 14)] = output0_local[7];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 15)] = output0_local[8];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 16)] = output0_local[9];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 17)] = output0_local[10];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 18)] = output0_local[11];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 19)] = output0_local[12];\n  output0[((((((int)blockIdx.z) * 196) + (((int)threadIdx.y) * 28)) + (((int)threadIdx.x) * 7)) + 20)] = output0_local[13];\n}\n\n", "gridDim": [1, 1, 32768], "blockDim": [2, 7, 1]}, {"tvm_func_name": "tuned_depthwise_convolution_op_float_i128_1024_7_7_w1024_1_3_3_o128_1024_7_7_ws1_1_wd1_1_p1_1_kernel0", "op_type": "DepthwiseConv2dNative", "parameters": {"input_shape": [128, 1024, 7, 7], "filter_shape": [1024, 1, 3, 3], "output_shape": [128, 1024, 7, 7], "window_movement_strides": [1, 1], "window_dilation_strides": [1, 1], "padding_below_diff": [1, 1]}, "code": "extern \"C\" __global__ void tuned_depthwise_convolution_op_float_i128_1024_7_7_w1024_1_3_3_o128_1024_7_7_ws1_1_wd1_1_p1_1_kernel0( float* __restrict__ input0,  float* __restrict__ input1,  float* __restrict__ output0) {\n  __shared__ float PaddedInput_shared[1296];\n  __shared__ float input1_shared[144];\n   float PaddedInput_shared_local[63];\n   float input1_shared_local[9];\n   float output0_local[7];\n  PaddedInput_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.y))] = (((((9 <= (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 81)) && ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 81) < 72)) && (1 <= (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 9))) && ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) / 81) * 49)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 81) / 9) * 7)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 112)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 31) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 31) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 112) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 31) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 224)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 62) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 62) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 224) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 62) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 336)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 336) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 12) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 3) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 448)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 43) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 43) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 448) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 43) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 7) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 560)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 74) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 74) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 560) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 74) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 2) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 672)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 24) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 24) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 672) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 24) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 6) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 784)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 55) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 55) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 784) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 55) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 896)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 896) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 5) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1008)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 36) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 36) % 81) < 72)) && (1 <= (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 9))) && ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1008) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 36) % 81) / 9) * 7)) + (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) % 9)) - 8)] : 0.000000e+00f);\n  PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1120)] = (((((9 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 67) % 81)) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 67) % 81) < 72)) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1120) / 81) * 49)) + ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 67) % 81) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 4) % 9)) - 8)] : 0.000000e+00f);\n  if (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) < 64) {\n    if (((int)threadIdx.z) < 10) {\n      PaddedInput_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1232)] = ((((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) < 55) && (1 <= ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 9))) && (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 9) < 8)) ? input0[(((((((int)blockIdx.z) * 784) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 1232) / 81) * 49)) + (((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 17) / 9) * 7)) + ((((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 8) % 9)) - 8)] : 0.000000e+00f);\n    }\n  }\n  input1_shared[((((int)threadIdx.z) * 7) + ((int)threadIdx.y))] = input1[((((((int)blockIdx.z) & 63) * 144) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y))];\n  if (((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) < 32) {\n    if (((int)threadIdx.z) < 5) {\n      input1_shared[(((((int)threadIdx.z) * 7) + ((int)threadIdx.y)) + 112)] = input1[(((((((int)blockIdx.z) & 63) * 144) + (((int)threadIdx.z) * 7)) + ((int)threadIdx.y)) + 112)];\n    }\n  }\n  __syncthreads();\n  PaddedInput_shared_local[0] = PaddedInput_shared[((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9))];\n  PaddedInput_shared_local[9] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 1)];\n  PaddedInput_shared_local[18] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 2)];\n  PaddedInput_shared_local[27] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 3)];\n  PaddedInput_shared_local[36] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 4)];\n  PaddedInput_shared_local[45] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 5)];\n  PaddedInput_shared_local[54] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 6)];\n  PaddedInput_shared_local[1] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 1)];\n  PaddedInput_shared_local[10] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 2)];\n  PaddedInput_shared_local[19] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 3)];\n  PaddedInput_shared_local[28] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 4)];\n  PaddedInput_shared_local[37] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 5)];\n  PaddedInput_shared_local[46] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 6)];\n  PaddedInput_shared_local[55] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 7)];\n  PaddedInput_shared_local[2] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 2)];\n  PaddedInput_shared_local[11] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 3)];\n  PaddedInput_shared_local[20] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 4)];\n  PaddedInput_shared_local[29] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 5)];\n  PaddedInput_shared_local[38] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 6)];\n  PaddedInput_shared_local[47] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 7)];\n  PaddedInput_shared_local[56] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 8)];\n  PaddedInput_shared_local[3] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 9)];\n  PaddedInput_shared_local[12] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 10)];\n  PaddedInput_shared_local[21] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 11)];\n  PaddedInput_shared_local[30] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 12)];\n  PaddedInput_shared_local[39] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 13)];\n  PaddedInput_shared_local[48] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 14)];\n  PaddedInput_shared_local[57] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 15)];\n  PaddedInput_shared_local[4] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 10)];\n  PaddedInput_shared_local[13] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 11)];\n  PaddedInput_shared_local[22] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 12)];\n  PaddedInput_shared_local[31] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 13)];\n  PaddedInput_shared_local[40] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 14)];\n  PaddedInput_shared_local[49] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 15)];\n  PaddedInput_shared_local[58] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 16)];\n  PaddedInput_shared_local[5] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 11)];\n  PaddedInput_shared_local[14] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 12)];\n  PaddedInput_shared_local[23] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 13)];\n  PaddedInput_shared_local[32] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 14)];\n  PaddedInput_shared_local[41] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 15)];\n  PaddedInput_shared_local[50] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 16)];\n  PaddedInput_shared_local[59] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 17)];\n  PaddedInput_shared_local[6] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 18)];\n  PaddedInput_shared_local[15] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 19)];\n  PaddedInput_shared_local[24] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 20)];\n  PaddedInput_shared_local[33] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 21)];\n  PaddedInput_shared_local[42] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 22)];\n  PaddedInput_shared_local[51] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 23)];\n  PaddedInput_shared_local[60] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 24)];\n  PaddedInput_shared_local[7] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 19)];\n  PaddedInput_shared_local[16] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 20)];\n  PaddedInput_shared_local[25] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 21)];\n  PaddedInput_shared_local[34] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 22)];\n  PaddedInput_shared_local[43] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 23)];\n  PaddedInput_shared_local[52] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 24)];\n  PaddedInput_shared_local[61] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 25)];\n  PaddedInput_shared_local[8] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 20)];\n  PaddedInput_shared_local[17] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 21)];\n  PaddedInput_shared_local[26] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 22)];\n  PaddedInput_shared_local[35] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 23)];\n  PaddedInput_shared_local[44] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 24)];\n  PaddedInput_shared_local[53] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 25)];\n  PaddedInput_shared_local[62] = PaddedInput_shared[(((((int)threadIdx.z) * 81) + (((int)threadIdx.y) * 9)) + 26)];\n  input1_shared_local[0] = input1_shared[(((int)threadIdx.z) * 9)];\n  input1_shared_local[1] = input1_shared[((((int)threadIdx.z) * 9) + 1)];\n  input1_shared_local[2] = input1_shared[((((int)threadIdx.z) * 9) + 2)];\n  input1_shared_local[3] = input1_shared[((((int)threadIdx.z) * 9) + 3)];\n  input1_shared_local[4] = input1_shared[((((int)threadIdx.z) * 9) + 4)];\n  input1_shared_local[5] = input1_shared[((((int)threadIdx.z) * 9) + 5)];\n  input1_shared_local[6] = input1_shared[((((int)threadIdx.z) * 9) + 6)];\n  input1_shared_local[7] = input1_shared[((((int)threadIdx.z) * 9) + 7)];\n  input1_shared_local[8] = input1_shared[((((int)threadIdx.z) * 9) + 8)];\n  output0_local[0] = 0.000000e+00f;\n  output0_local[1] = 0.000000e+00f;\n  output0_local[2] = 0.000000e+00f;\n  output0_local[3] = 0.000000e+00f;\n  output0_local[4] = 0.000000e+00f;\n  output0_local[5] = 0.000000e+00f;\n  output0_local[6] = 0.000000e+00f;\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[0] * input1_shared_local[0]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[9] * input1_shared_local[0]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[18] * input1_shared_local[0]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[27] * input1_shared_local[0]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[36] * input1_shared_local[0]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[45] * input1_shared_local[0]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[54] * input1_shared_local[0]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[1] * input1_shared_local[1]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[10] * input1_shared_local[1]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[19] * input1_shared_local[1]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[28] * input1_shared_local[1]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[37] * input1_shared_local[1]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[46] * input1_shared_local[1]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[55] * input1_shared_local[1]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[2] * input1_shared_local[2]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[11] * input1_shared_local[2]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[20] * input1_shared_local[2]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[29] * input1_shared_local[2]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[38] * input1_shared_local[2]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[47] * input1_shared_local[2]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[56] * input1_shared_local[2]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[3] * input1_shared_local[3]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[12] * input1_shared_local[3]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[21] * input1_shared_local[3]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[30] * input1_shared_local[3]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[39] * input1_shared_local[3]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[48] * input1_shared_local[3]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[57] * input1_shared_local[3]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[4] * input1_shared_local[4]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[13] * input1_shared_local[4]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[22] * input1_shared_local[4]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[31] * input1_shared_local[4]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[40] * input1_shared_local[4]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[49] * input1_shared_local[4]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[58] * input1_shared_local[4]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[5] * input1_shared_local[5]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[14] * input1_shared_local[5]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[23] * input1_shared_local[5]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[32] * input1_shared_local[5]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[41] * input1_shared_local[5]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[50] * input1_shared_local[5]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[59] * input1_shared_local[5]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[6] * input1_shared_local[6]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[15] * input1_shared_local[6]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[24] * input1_shared_local[6]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[33] * input1_shared_local[6]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[42] * input1_shared_local[6]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[51] * input1_shared_local[6]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[60] * input1_shared_local[6]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[7] * input1_shared_local[7]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[16] * input1_shared_local[7]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[25] * input1_shared_local[7]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[34] * input1_shared_local[7]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[43] * input1_shared_local[7]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[52] * input1_shared_local[7]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[61] * input1_shared_local[7]));\n  output0_local[0] = (output0_local[0] + (PaddedInput_shared_local[8] * input1_shared_local[8]));\n  output0_local[1] = (output0_local[1] + (PaddedInput_shared_local[17] * input1_shared_local[8]));\n  output0_local[2] = (output0_local[2] + (PaddedInput_shared_local[26] * input1_shared_local[8]));\n  output0_local[3] = (output0_local[3] + (PaddedInput_shared_local[35] * input1_shared_local[8]));\n  output0_local[4] = (output0_local[4] + (PaddedInput_shared_local[44] * input1_shared_local[8]));\n  output0_local[5] = (output0_local[5] + (PaddedInput_shared_local[53] * input1_shared_local[8]));\n  output0_local[6] = (output0_local[6] + (PaddedInput_shared_local[62] * input1_shared_local[8]));\n  output0[(((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7))] = output0_local[0];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + 1)] = output0_local[1];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + 2)] = output0_local[2];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + 3)] = output0_local[3];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + 4)] = output0_local[4];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + 5)] = output0_local[5];\n  output0[((((((int)blockIdx.z) * 784) + (((int)threadIdx.z) * 49)) + (((int)threadIdx.y) * 7)) + 6)] = output0_local[6];\n}\n\n", "gridDim": [1, 1, 8192], "blockDim": [1, 7, 16]}]